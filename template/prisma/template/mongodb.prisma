// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  email            String          @unique
  age              Int
  role             Role            @default(USER)
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  writtenPosts     Post[]          @relation("writtenPosts")
  favoritePosts    Post[]          @relation("favoritePosts")
  userPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id])
  userPreferenceId String?         @unique @db.ObjectId
}

model UserPreference {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  emailUpdates Boolean
  user         User?
}

model Post {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  rating        Float
  createAt      DateTime  @default(now())
  updateAt      DateTime  @updatedAt
  author        User      @relation("writtenPosts", fields: [authorId], references: [id])
  authorId      String    @db.ObjectId
  favoritedBy   User?     @relation("favoritePosts", fields: [favoritedById], references: [id])
  favoritedById String?   @db.ObjectId
  Category      Category? @relation(fields: [categoryId], references: [id])
  categoryId    String?   @db.ObjectId
}

model Category {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String @unique
  posts Post[]
}

enum Role {
  USER
  ADMIN
}
